*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

.container{
    width: 100vw;
    height: 100vh;
    /* perspective: 50px; */

}

.box{
    width: 200px;
    height: 200px;
    background-color: aquamarine;
    border: 1px solid;
    transition-property: all;
}

.box:hover{
    width:400px;
    height: 400px;
    background-color: red;
    /* transition-duration: 2s;
    transition-timing-function:cubic-bezier(0.175, 0.885, 0.32, 1.275);
    transition-delay: 1s; */

    /* transition: property, duration, timing-function, delay */
    transition: all 2s cubic-bezier(0.175, 0.885, 0.32, 1.275) 1s;
}


.box1{
    width: 200px;
    height: 200px;
    background-color: aqua;
    border: 1px solid;

    /* transform: translateX(50px);
    transform: translateY(50px); */

    /* transform: translateX(50px) translateY(20px); */
    /* transform: translate(50px,20px);  */

    /* transform: rotateX(20deg);  */
    /* transform: rotateY(20deg);  */
    /* transform: rotate(20deg); */
    /* transform: rotateX(20deg) rotateY(20deg); */

    /* transform:skewX(-30deg); */
    /* transform: skewY(20deg); */
    /* transform: skew(30deg,20deg); */
    /* transform: skewX(30deg) skewY(20deg); */

    /* transform: scaleX(2); */
    /* transform: scaleY(2); */
    /* transform: scaleX(2) scaleY(2); */
    /* transform: scale(2); */

    /* transform: translate(20px, 20px) rotate(10deg) scale(2) skew(10deg); */

    
    margin: auto;
    /* transform: perspective(100px) translateZ(20px); */

    transform: perspective(100px) translateZ(20px);
    /* transform: rotateZ(20deg); */
    /* transform: scale3D(2,2,2) rotateX(20deg); */
    /* We are able to define perspective in parent also, that is marked in container now*/

    /* perspective is the distace between the object and eye-position; */





    
}